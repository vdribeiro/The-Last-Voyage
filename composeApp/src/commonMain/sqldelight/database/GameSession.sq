import kotlin.Int;
import kotlin.String;
import kotlin.collections.Set;

CREATE TABLE IF NOT EXISTS GameSession (
    id TEXT NOT NULL PRIMARY KEY,
    utc TEXT NOT NULL,
    assignedPoints INTEGER AS Int NOT NULL,
    yearsTraveled REAL NOT NULL,
    sensorRange INTEGER AS Int NOT NULL,
    integrity INTEGER AS Int NOT NULL,
    fuel INTEGER AS Int NOT NULL,
    materials INTEGER AS Int NOT NULL,
    cryopods INTEGER AS Int NOT NULL,
    currentStellarHostId TEXT,
    visitedStellarHosts TEXT AS Set<String> NOT NULL,
    launchedEvents TEXT AS Set<String> NOT NULL,
    settledPlanetId TEXT,
    finalHabitability REAL,
    score REAL,
    rocheWeight REAL NOT NULL,
    habitableZoneWeight REAL NOT NULL,
    planetRadiusWeight REAL NOT NULL,
    planetMassWeight REAL NOT NULL,
    planetTelluricityWeight REAL NOT NULL,
    planetEccentricityWeight REAL NOT NULL,
    planetTemperatureWeight REAL NOT NULL,
    planetObliquityWeight REAL NOT NULL,
    planetEsiWeight REAL NOT NULL,
    stellarSpectralTypeWeight REAL NOT NULL,
    stellarMassWeight REAL NOT NULL,
    stellarAgeWeight REAL NOT NULL,
    stellarActivityWeight REAL NOT NULL,
    stellarRotationalPeriodWeight REAL NOT NULL,
    stellarGravityWeight REAL NOT NULL,
    stellarMetallicityWeight REAL NOT NULL,
    stellarEffectiveTemperatureWeight REAL NOT NULL,
    planetProtectionWeight REAL NOT NULL,
    planetTidalLockingWeight REAL NOT NULL,
    planetMassLowerLimit REAL NOT NULL,
    planetMassIdealUpperLimit REAL NOT NULL,
    planetMassMaxUpperLimit REAL NOT NULL,
    planetRadiusLowerLimit REAL NOT NULL,
    planetRadiusIdealUpperLimit REAL NOT NULL,
    planetRadiusMaxUpperLimit REAL NOT NULL,
    stellarHostEffectiveTemperatureMaxDeviation REAL NOT NULL
);

upsertGameSession:
INSERT OR REPLACE INTO GameSession VALUES ?;

getGameSessions:
SELECT
    GameSession.id,
    GameSession.utc,
    GameSession.assignedPoints,
    GameSession.yearsTraveled,
    GameSession.sensorRange,
    GameSession.integrity,
    GameSession.fuel,
    GameSession.materials,
    GameSession.cryopods,
    GameSession.currentStellarHostId,
    GameSession.visitedStellarHosts,
    GameSession.launchedEvents,
    GameSession.settledPlanetId,
    GameSession.finalHabitability,
    GameSession.score,
    GameSession.rocheWeight,
    GameSession.habitableZoneWeight,
    GameSession.planetRadiusWeight,
    GameSession.planetMassWeight,
    GameSession.planetTelluricityWeight,
    GameSession.planetEccentricityWeight,
    GameSession.planetTemperatureWeight,
    GameSession.planetObliquityWeight,
    GameSession.planetEsiWeight,
    GameSession.stellarSpectralTypeWeight,
    GameSession.stellarMassWeight,
    GameSession.stellarAgeWeight,
    GameSession.stellarActivityWeight,
    GameSession.stellarRotationalPeriodWeight,
    GameSession.stellarGravityWeight,
    GameSession.stellarMetallicityWeight,
    GameSession.stellarEffectiveTemperatureWeight,
    GameSession.planetProtectionWeight,
    GameSession.planetTidalLockingWeight,
    GameSession.planetMassLowerLimit,
    GameSession.planetMassIdealUpperLimit,
    GameSession.planetMassMaxUpperLimit,
    GameSession.planetRadiusLowerLimit,
    GameSession.planetRadiusIdealUpperLimit,
    GameSession.planetRadiusMaxUpperLimit,
    GameSession.stellarHostEffectiveTemperatureMaxDeviation
FROM GameSession
ORDER BY utc DESC;

getLatestGameSession:
SELECT
    GameSession.id,
    GameSession.utc,
    GameSession.assignedPoints,
    GameSession.yearsTraveled,
    GameSession.sensorRange,
    GameSession.integrity,
    GameSession.fuel,
    GameSession.materials,
    GameSession.cryopods,
    GameSession.currentStellarHostId,
    GameSession.visitedStellarHosts,
    GameSession.launchedEvents,
    GameSession.settledPlanetId,
    GameSession.finalHabitability,
    GameSession.score,
    GameSession.rocheWeight,
    GameSession.habitableZoneWeight,
    GameSession.planetRadiusWeight,
    GameSession.planetMassWeight,
    GameSession.planetTelluricityWeight,
    GameSession.planetEccentricityWeight,
    GameSession.planetTemperatureWeight,
    GameSession.planetObliquityWeight,
    GameSession.planetEsiWeight,
    GameSession.stellarSpectralTypeWeight,
    GameSession.stellarMassWeight,
    GameSession.stellarAgeWeight,
    GameSession.stellarActivityWeight,
    GameSession.stellarRotationalPeriodWeight,
    GameSession.stellarGravityWeight,
    GameSession.stellarMetallicityWeight,
    GameSession.stellarEffectiveTemperatureWeight,
    GameSession.planetProtectionWeight,
    GameSession.planetTidalLockingWeight,
    GameSession.planetMassLowerLimit,
    GameSession.planetMassIdealUpperLimit,
    GameSession.planetMassMaxUpperLimit,
    GameSession.planetRadiusLowerLimit,
    GameSession.planetRadiusIdealUpperLimit,
    GameSession.planetRadiusMaxUpperLimit,
    GameSession.stellarHostEffectiveTemperatureMaxDeviation
FROM GameSession
ORDER BY GameSession.utc DESC
LIMIT 1;
